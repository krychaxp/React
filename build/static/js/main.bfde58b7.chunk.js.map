{"version":3,"sources":["components/Github/Result.js","components/Github/index.js","components/Forms/index.js","components/Home/index.js","App.js","service-worker.js","index.js"],"names":["Result","props","searching","value","setSearching","useState","result","setResult","open","setOpen","alertInfo","setAlertInfo","alertSeverity","setAlertSeverity","whenSuccess","data","followersUser","repositoriesUser","avatar_url","html_url","location","name","followers","public_repos","company","public_gists","bio","id","class","src","alt","className","href","rel","target","AvatarGroup","max","Array","fill","map","v","i","login","Avatar","key","description","created_at","updated_at","language","license","homepage","days","Math","round","Date","now","getTime","create","toLocaleDateString","title","match","submitFunction","a","Promise","resolve","reject","setTimeout","url","axios","get","followers_url","repos_url","useEffect","test","Paper","elevation","Skeleton","variant","width","height","document","body","offsetWidth","Snackbar","onClose","Alert","severity","App","setValue","TextField","label","onChange","e","Button","color","disabled","onClick","Forms","useRouteMatch","console","log","to","path","Topic","topicId","useParams","Home","exact","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bfde58b7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Paper, Snackbar, Avatar } from '@material-ui/core';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nconst Result = (props) => {\r\n    const { searching, value,setSearching } = props;\r\n    const [result, setResult] = useState('');\r\n    const [open, setOpen] = useState(false)\r\n    const [alertInfo, setAlertInfo] = useState('')\r\n    const [alertSeverity, setAlertSeverity] = useState('info')\r\n    const whileFinding = () => {\r\n        return (\r\n            <Paper elevation={3} id=\"skeleton\">\r\n                <Skeleton variant=\"rect\" width={300} height={300} />\r\n                <Skeleton variant=\"rect\" width={250} height={100} />\r\n                <Skeleton variant=\"rect\" width={document.body.offsetWidth * 0.9} height={500} />\r\n            </Paper>\r\n        )\r\n    }\r\n    const validation = () => new Promise((resolve, reject) => {\r\n        if (!value) reject(\"Input can not be empty\")\r\n        if (!/^[a-z0-9-]+$/i.test(value)) reject(\"Input can have only \\\"A-z\\\",\\\"0-9\\\" and \\\"-\\\" characters\");\r\n        resolve()\r\n    })\r\n    const whenSuccess = ([data, followersUser, repositoriesUser]) => {\r\n        const { avatar_url, html_url, location, name, followers, public_repos,company,public_gists,bio } = data;\r\n        return (\r\n            <div id=\"result\">\r\n                <div id=\"user-info\">\r\n                    <img class=\"user-logo\" src={avatar_url} alt={name} />\r\n                    <h1>{name}</h1>\r\n                    {bio}\r\n                    <a className=\"link\" href={html_url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        Check profile on GitHub <ExitToAppIcon />\r\n                    </a>\r\n                    <h2>Followers ({followers})</h2>\r\n                    <AvatarGroup max={6}>\r\n                        {Array(followers).fill().map((v, i) => {\r\n                            if (i < 6 && followersUser[i]) {\r\n                                const { login, id } = followersUser[i];\r\n                                return <Avatar key={i} alt={login} src={`https://avatars2.githubusercontent.com/u/${id}`} />\r\n                            } else {\r\n                                return <Avatar key={i} />\r\n                            }\r\n                        })}\r\n                    </AvatarGroup>\r\n                    <div className=\"icons\">\r\n                    {location ? (<div className=\"location\"><LocationOnIcon />{location}</div>) : null}\r\n                    {company ? (<div className=\"company\"><BusinessIcon />{company}</div>) : null}\r\n                    </div>\r\n                    <h2>Repositiories ({public_repos})</h2>\r\n                    <h2>Gits ({public_gists})</h2>\r\n                </div>\r\n                <div id=\"repositories\">\r\n                    {repositoriesUser.map((v, i) => {\r\n                        const { html_url, name, description, created_at, updated_at, language, license, homepage } = v;\r\n                        const days = Math.round((Date.now() - new Date(updated_at).getTime()) / 1000 / 60 / 60 / 24);\r\n                        const create = new Date(created_at).toLocaleDateString();\r\n                        return (\r\n                            <div>\r\n                                <a href={html_url} rel=\"noopener noreferrer\" key={i} title={name} target=\"_blank\" className=\"name\">\r\n                                    {name}\r\n                                </a>\r\n                                <div class=\"descr\">{description}</div>\r\n                                <div class=\"icons\">\r\n                                    <div><span />&nbsp;{language || \"No language\"}</div>\r\n                                    {license ? <div>License: {license.name}</div> : ''}\r\n                                    {homepage ? <div>\r\n                                        <a href={homepage} rel=\"noopener noreferrer\" key={i} title={homepage} target=\"_blank\">\r\n                                            <LanguageIcon />{homepage.match(/[a-z0-9-.]+/g)[1]}\r\n                                        </a>\r\n                                    </div> : ''}\r\n                                    <div>Updated {days} days ago</div>\r\n                                    <div>Created in {create}</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const submitFunction = async () => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            const url = `https://api.github.com/users/${value}`;\r\n            try {\r\n                const { data } = await axios.get(url)\r\n                const { followers_url, repos_url } = data\r\n                const { data: followersUser } = await axios.get(followers_url);\r\n                const { data: repositoriesUser } = await axios.get(repos_url);\r\n                resolve([data, followersUser, repositoriesUser]);\r\n            } catch (e) { reject('Not Found'); }\r\n        }, 500)\r\n    })\r\n    useEffect(() => {\r\n        if (!searching) { return }\r\n        (async () => {\r\n            try {\r\n                setOpen(true);\r\n                await validation()\r\n                setResult(whileFinding());\r\n                setAlertSeverity('info')\r\n                setAlertInfo(`Searching ...`);\r\n                const data = await submitFunction();\r\n                setResult(whenSuccess(data));\r\n                setOpen(false);\r\n            } catch (e) {\r\n                setResult(null)\r\n                setAlertSeverity('error')\r\n                setAlertInfo(e);\r\n            }finally{\r\n                setSearching(false)\r\n            }\r\n        })()\r\n    }, [searching])\r\n    return (\r\n        <>\r\n            {result}\r\n            <Snackbar open={open} onClose={() => { setOpen(false) }}>\r\n                <Alert onClose={() => { setOpen(false) }} severity={alertSeverity} variant=\"filled\" elevation={6}>\r\n                    {alertInfo}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\nexport default Result","import React, { useState, useEffect } from 'react'\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Result from './Result'\r\nexport default function App() {\r\n  const [value, setValue] = useState('')\r\n  const [searching, setSearching] = useState(false)\r\n  return (\r\n    <div id=\"api-github\">\r\n      <div id=\"searcher\">\r\n        <TextField label=\"Search user\" variant=\"outlined\" value={value} onChange={(e) => setValue(e.target.value)} />\r\n        <Button variant=\"contained\" color=\"primary\" disabled={searching} onClick={() => setSearching(true)}>Search</Button>\r\n      </div>\r\n      <main>\r\n        <Result value={value} searching={searching} setSearching={setSearching}/>\r\n      </main>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n/*\r\nexport default function Forms() {\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = (data, e) => {\r\n    console.log(\"Submit event\", e);\r\n    alert(JSON.stringify(data));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input name=\"firstName\" ref={register} />\r\n      <input name=\"lastName\" ref={register} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}*/\r\nexport default function Forms() {\r\n  let match = useRouteMatch();\r\n  console.log(match);\r\n  return (\r\n    <div>\r\n      <h2>Forms</h2>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to={`${match.url}/components`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/props-v-state`}>\r\n            Props v. State\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* The Forms page has its own <Switch> with more routes\r\n          that build on the /forms URL path. You can think of the\r\n          2nd <Route> here as an \"index\" page for all forms, or\r\n          the page that is shown when no topic is selected */}\r\n      <Switch>\r\n        <Route path={`${match.path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <h3>Please select a topic.</h3>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams();\r\n  return <h3>Requested topic ID: {topicId}</h3>;\r\n}","import React from 'react'\r\nexport default function Home() {\r\n    return(<>Home Component</>)\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Github from './components/Github'\r\nimport Forms from './components/Forms'\r\nimport Home from './components/Home'\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <header>\r\n                Projects in React\r\n            </header>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/github\">Github</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/forms\">Forms</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <main>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path=\"/github\">\r\n                        <Github />\r\n                    </Route>\r\n                    <Route path=\"/forms\">\r\n                        <Forms />\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n            <footer>\r\n                &copy; Copyright Krychaxp 2020\r\n            </footer>\r\n        </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport * as serviceWorker from './service-worker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n  , document.getElementById('container'));\nserviceWorker.register();\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}